{"version":3,"sources":["components/Icons/index.tsx","utils/connectors.ts","utils/helpers.tsx","components/LzButtons/index.tsx","components/AccountInfoButton/index.tsx","components/LzText/index.tsx","components/CopyableAddress/index.tsx","hooks/use-window-size.tsx","components/DeviceDetect/index.tsx","hooks/use-language.tsx","utils/lang/en.ts","utils/lang/vi.ts","components/AppLayout/index.tsx","index.tsx"],"names":["BaseIcon","props","role","className","children","PadIcon","containerProps","src","alt","LzLogoIcon","ThemeIcon","type","TelegramIcon","TwitterIcon","LanguageIcon","MenuIcon","BscLogoIcon","CopyIcon","ArrowUpIcon","XIcon","DoubleRightArrowIcon","DoubleLeftArrowIcon","style","transform","FacebookLogoIcon","GlobalCommunityLogoIcon","LeftArrowIcon","LeftArrowGreyIcon","DownArrowGreyIcon","CountryFlagIcon","country","toLowerCase","DocsIcon","HelpIcon","RPC_URLS","injected","connector","InjectedConnector","supportedChainIds","image","title","desc","network","NetworkConnector","urls","defaultChainId","walletconnect","WalletConnectConnector","rpc","qrcode","walletlink","WalletLinkConnector","url","appName","authereum","AuthereumConnector","chainId","torus","TorusConnector","fortmatic","FortmaticConnector","apiKey","process","magic","MagicConnector","email","portis","PortisConnector","dAppId","networks","ledger","LedgerConnector","pollingInterval","frame","FrameConnector","shortenAddressString","address","slice","length","weiToNumber","wei","decimal","number","utils","formatUnits","arr","split","join","LzButton","theme","borderStyle","onClick","dark","light","AccountInfoButton","account","balance","LzText","CopyableAddress","text","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","BrowserView","MobileView","sourceString","en","english","vietnamese","wallet","bnb_balance","lz_balance","referral_link","view_on_bscscan","your_address","disconnect_wallet","connect_wallet","vi","CrossStorageClient","require","LS_CONNECTOR","LS_THEME","AppLayout","useWeb3React","activate","deactivate","library","bnbBalance","setBnbBalance","lzBalance","setLzBalance","visibleWalletModal","setVisibleWalletModal","setTheme","dapps","location","useLocation","useHistory","showMobileFooterExpand","setShowMobileFooterExpand","showMobileMenu","setShowMobileMenu","showDesktopWalletExpand","setShowDesktopWalletExpand","showSelectLanguage","setShowSelectLanguage","localStorage","getItem","language","setLanguage","setItem","getText","key","supportedLanguages","useLanguage","refAccountBtn","useRef","refMobileAccountBtn","xStorageClient","setXStorageClient","i","configs","j","matchPath","pathname","path","exact","document","name","useHotkeys","e","preventDefault","storage","onConnect","then","console","log","refAddress","URLSearchParams","search","get","formalizedAddress","ethers","getAddress","set","catch","error","initTheme","gitInfo","commit","hash","initConnector","Object","values","connectors","map","find","constructor","getBalance","trackConnectedAccount","Contract","LzAbi","balanceOf","parallax","acc","fetch","isMenuExpand","child","selectedMenuItem","Component","React","lazy","findSelectedMenuItem","to","menuItem","Icon","icon","menuLink","subMenuItem","href","target","ref","themeToSet","onOutsideClick","entries","lang","fallback","useSubPage","env","showConnectWalletModal","disabled","includes","current","origin","toString","removeItem","pages","Math","ceil","horizontal","_","chunk","subMenuItemList","pageType","gridTemplateColumns","SINGLE","FIRST","MIDDLE","LAST","offset","scrollTo","value","toUpperCase","showMobileFooter","visible","setVisible","providerOptions","err","alert","earnConfig","exchangeConfig","ReactDOM","render","StrictMode","getLibrary","provider","providers","Web3Provider","getElementById"],"mappings":"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","file":"static/js/main.442c9f35.chunk.js","sourcesContent":["import React from 'react';\nimport './style.scss';\n\nconst BaseIcon = (props: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span role='img' {...props} className={`lz-icon icon ${props.className || ''}`}>\n      {props.children}\n    </span>\n  );\n};\n\ntype SubIconProps = React.HTMLAttributes<HTMLSpanElement> & {\n  containerProps?: React.HTMLAttributes<HTMLSpanElement>;\n};\n\ntype CountryIconProps = React.HTMLAttributes<HTMLSpanElement> & {\n  country: string;\n  containerProps?: React.HTMLAttributes<HTMLSpanElement>;\n};\n\nexport const HomeIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/home.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const SfarmIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/sfarm.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const PoolIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/pool.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const FarmIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/farm.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const PadIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/pad.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const VaultIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/vault.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const BankIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/bank.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const SwapIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/swap.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const LzLogoIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/lz-logo.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const ThemeIcon = (props: SubIconProps & { type: 'light' | 'dark' }) => {\n  if (props.type === 'light') {\n    return (\n      <BaseIcon {...props.containerProps}>\n        <img src='/icons/theme.svg' alt='' {...props} />\n      </BaseIcon>\n    );\n  }\n  return (\n    <BaseIcon {...props.containerProps}>\n      <img src='/icons/dark-theme.svg' alt='' {...props} />\n    </BaseIcon>\n  );\n};\n\nexport const TelegramIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/telegram.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const TwitterIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/twitter.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const LanguageIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/language.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const MenuIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/menu.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const BscLogoIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/bsc-logo.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const CopyIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/copy.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const ArrowUpIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/arrow-up.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const XIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/x-icon.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const DoubleRightArrowIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/double-right-arrow.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const DoubleLeftArrowIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img\n      src='/icons/double-right-arrow.svg'\n      alt=''\n      {...props}\n      style={{ transform: 'scale(-1, -1)', ...props?.style }}\n    />\n  </BaseIcon>\n);\n\nexport const FacebookLogoIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/facebook-logo.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const YoutubeLogoIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/youtube-logo.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const GlobalCommunityLogoIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps} className='global-community-logo'>\n    <img src='/icons/global-community-logo.svg' alt='' {...props}/>\n  </BaseIcon>\n);\n\nexport const LeftArrowIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/left-arrow.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const LeftArrowGreyIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/left-arrow-grey.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const DownArrowGreyIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/down-arrow-grey.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const BlackRightArrowIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/black-right-arrow.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const OpenInNewTabIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/open-in-new-tab.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\n\n// download flag svg image in https://github.com/yammadev/flag-icons\nexport const CountryFlagIcon = (props: CountryIconProps) => {\n  return (\n    <BaseIcon {...props.containerProps}>\n      <img src={`/icons/countries/${props.country.toLowerCase()}.svg`} alt='' {...props} />\n    </BaseIcon>\n  )\n}\nexport const EarnIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/open-in-new-tab.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const DocsIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/docs.svg' alt='' {...props} />\n  </BaseIcon>\n);\n\nexport const HelpIcon = (props: SubIconProps) => (\n  <BaseIcon {...props.containerProps}>\n    <img src='/icons/help.svg' alt='' {...props} />\n  </BaseIcon>\n);","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { NetworkConnector } from '@web3-react/network-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { AuthereumConnector } from '@web3-react/authereum-connector'\nimport { TorusConnector } from '@web3-react/torus-connector'\nimport { FortmaticConnector } from '@web3-react/fortmatic-connector';\nimport { MagicConnector } from '@web3-react/magic-connector';\nimport { PortisConnector } from '@web3-react/portis-connector';\nimport { LedgerConnector } from '@web3-react/ledger-connector';\nimport { FrameConnector } from '@web3-react/frame-connector';\nconst LEDGE_POLLING_INTERVAL = 12000;\nconst RPC_URLS: { [chainId: number]: string } = {\n    1: 'https://mainnet.infura.io/v3/84842078b09946638c03157f83405213' as string,\n    4: 'https://mainnet.infura.io/v3/84842078b09946638c03157f83405213' as string,\n    56: 'https://bsc-dataseed.binance.org/' as string\n}\n\nconst injected = {\n    connector: new InjectedConnector({\n        supportedChainIds: [1, 3, 4, 5, 42, 56, 97]\n    }),\n    image: '/images/metamask.svg',\n    title: 'Metamask',\n    desc: 'Connect to your Metamask Wallet'\n}\n\nconst network = {\n    connector: new NetworkConnector({\n        urls: { 1: RPC_URLS[1], 56:  RPC_URLS[56]},\n        defaultChainId: 56\n    }),\n    image: '/images/walletconnect.svg',\n    title: 'WalletConnect',\n    desc: 'Scan with WalletConnect to connect'\n}\n\nconst walletconnect = {\n    connector: new WalletConnectConnector({\n        rpc: {\n          56:RPC_URLS[1],\n          1: RPC_URLS[56]\n        },\n        qrcode: true,\n    }),\n    image: '/images/walletconnect.svg',\n    title: 'WalletConnect',\n    desc: 'Scan with WalletConnect to connect'\n}\n\nconst walletlink = {\n    connector: new WalletLinkConnector({\n        url: RPC_URLS[1],\n        appName: 'web3-react example',\n        supportedChainIds: [1, 3, 4, 5, 42, 56, 97]\n    }),\n    image: '/images/coinbase.svg',\n    title: 'Coinbase',\n    desc: 'Connect to your Coinbase Wallet'\n}\n\nconst authereum = {\n    connector: new AuthereumConnector({ chainId: 56 }),\n    image: '/images/authereum.svg',\n    title: 'Authereum',\n    desc: 'Connect with your Authereum account'\n}\n\nconst torus = {\n    connector: new TorusConnector({ chainId: 56 }),\n    image: '/images/torus.svg',\n    title: 'Torus',\n    desc: 'Connect with your Torus account'\n}\nconst fortmatic = {\n    connector: new FortmaticConnector({\n        chainId: 4,\n        apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\n    }),\n    image: '/images/fortmatic.svg',\n    title: 'Fortmatic',\n    desc: 'Connect to your Fortmatic Wallet',\n};\n\nconst magic = {\n    connector: new MagicConnector({\n        chainId: 4,\n        apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\n        email: 'hello@example.com',\n    }),\n    image: '/images/magic.svg',\n    title: 'Magic',\n    desc: 'Connect to your Magic Wallet',\n};\nconst portis = {\n    connector: new PortisConnector({\n        dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\n        networks: [1, 100],\n    }),\n    image: '/images/portis.svg',\n    title: 'Portis',\n    desc: 'Connect to your Portis Wallet',\n};\n\nconst ledger = {\n    connector: new LedgerConnector({\n        chainId: 56,\n        url: RPC_URLS[56],\n        pollingInterval: LEDGE_POLLING_INTERVAL,\n    }),\n    image: '/images/ledger.svg',\n    title: 'Ledger',\n    desc: 'Connect to your Ledger Wallet',\n};\n\nconst frame = {\n    connector: new FrameConnector({\n        supportedChainIds: [1],\n    }),\n    image: '/images/image.svg',\n    title: 'Frame',\n    desc: 'Connect to your Frame Wallet',\n};\n\nexport default {\n    injected,\n    torus,\n    network,\n    authereum,\n    walletlink,\n    walletconnect,\n    fortmatic,\n    magic,\n    portis,\n    ledger,\n    frame,\n};\n","import {utils} from 'ethers';\n\nexport const shortenAddressString = (address: string) => {\n    return address.slice?.(0, 6) + '...' + address.slice?.(address.length - 4, address.length)\n}\n\nexport const weiToNumber = (wei: string, decimal: number = 18) => {\n    let number = utils.formatUnits(wei, decimal)\n    let arr = number.split('.')\n    if (arr.length > 0) {\n        arr[1] = arr[1].slice(0, 4)\n    }\n    number = arr.join('.')\n    return number.slice(-2) === '.0' ? number.slice(0, -2) : number\n}\n","import './style.scss';\n\nexport const LzButton = ({\n  theme,\n  className,\n  borderStyle,\n  style,\n  children,\n  onClick,\n}: {\n  theme?: 'auto' | 'dark' | 'light';\n  className?: string;\n  borderStyle?: React.CSSProperties;\n  style?: React.CSSProperties;\n  children: string;\n  onClick?: React.MouseEventHandler<HTMLDivElement>;\n  }) => {\n  const themeClass = {\n    dark: 'forced-dark',\n    light: 'forced-light',\n  }\n  return (\n    <div\n      className={`lz-button-container ${themeClass[theme!] || ''}`}\n      onClick={onClick}\n      style={{\n        ...borderStyle,\n      }}\n    >\n      <div\n        className={`lz-button-text ${className || ''}`}\n        style={{\n          ...style,\n        }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './style.scss';\nimport { shortenAddressString } from '../../utils/helpers';\nimport { BscLogoIcon } from '../Icons';\n\nexport const AccountInfoButton = (\n  props: React.HTMLAttributes<HTMLDivElement> & { account: string; balance: number },\n) => {\n  return (\n    <div className='account-info-button' {...props}>\n      <BscLogoIcon />\n      <div className='account-info-button__brief'>\n        <div className='account-info-button__address'>\n          {props.account && shortenAddressString(props.account)}\n        </div>\n        <div className='account-info-button__bnb-balance'>{props.balance} BNB</div>\n      </div>\n    </div>\n  );\n};\n","import './style.scss';\n\nexport const LzText = (props: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span {...props} className={`lz-text ${props.className}`}>\n      {props.children}\n    </span>\n  );\n};","import { CopyIcon } from '../Icons';\nimport './style.scss'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nexport const CopyableAddress = ({ children }: { children: string }) => {\n    \n    \n  return (\n    <div className='copyable-address-container'>\n      <div className='copyable-address'>\n        {children}\n      </div>\n      <CopyToClipboard text={children}>\n        <CopyIcon containerProps={{ className: 'copyable-address-copy-icon' }} />\n      </CopyToClipboard>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<{\n    width?: number;\n    height?: number;\n  }>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n","import { useWindowSize } from '../../hooks/use-window-size';\n\nexport const BrowserView = (props: any) => {\n  const { width } = useWindowSize();\n  if (width && width > 768) {\n    return props.children;\n  }\n  return null;\n};\n\nexport const MobileView = (props: any) => {\n  const { width } = useWindowSize();\n  if (width && width <= 768) {\n    return props.children;\n  }\n  return null;\n};\n","import en from '../utils/lang/en'\nimport vi from '../utils/lang/vi'\nimport {useEffect, useState} from \"react\";\n\nconst sourceString = {\n  en,\n  vi\n}\n\nexport const useLanguage = () => {\n  const [language, setLanguage] = useState<any>(localStorage.getItem('language') || 'en')\n\n  useEffect(() => {\n    localStorage.setItem('language', language)\n  }, [language])\n\n  const getText = (key: string) => {\n    return sourceString[language][key] ? sourceString[language][key] : key\n  }\n\n  const supportedLanguages = {\n    en: getText('english'),\n    // vi: getText('vietnamese'),\n  }\n\n  return {\n    language,\n    setLanguage,\n    getText,\n    supportedLanguages\n  }\n}","const language = {\n  english: 'English',\n  vietnamese: 'Tiếng Việt',\n\n  wallet: 'Wallet',\n  bnb_balance: 'BNB Balance',\n  lz_balance: 'LZ Balance',\n  referral_link: 'Referral link',\n  view_on_bscscan: 'View on BscScan',\n  your_address: 'Your address',\n  disconnect_wallet: 'Disconnect Wallet',\n  connect_wallet: 'Connect Wallet'\n}\n\nexport default language\n","const language = {\n  english: 'English',\n  vietnamese: 'Tiếng Việt',\n\n  wallet: 'Ví',\n  bnb_balance: 'Số dư BNB',\n  lz_balance: 'Số dư LZ',\n  view_on_bscscan: 'Xem trên bscscan',\n  referral_link: 'Link giới thiệu',\n  your_address: 'Địa chỉ',\n  disconnect_wallet: 'Ngắt kết nối',\n  connect_wallet: 'Kết nối ví'\n}\n\nexport default language\n","import React, { Suspense, useRef } from 'react';\nimport { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport './style.scss';\nimport '../../styles/main.scss';\nimport {\n  ArrowUpIcon,\n  DoubleRightArrowIcon,\n  FacebookLogoIcon,\n  LanguageIcon,\n  LeftArrowIcon,\n  LzLogoIcon,\n  MenuIcon,\n  TelegramIcon,\n  ThemeIcon,\n  TwitterIcon,\n  XIcon,\n  DoubleLeftArrowIcon,\n  LeftArrowGreyIcon,\n  DownArrowGreyIcon,\n  CountryFlagIcon,\n  PadIcon, DocsIcon, HelpIcon, GlobalCommunityLogoIcon, CopyIcon\n} from '../Icons';\nimport 'web3-react-modal/dist/index.css';\nimport { Web3ReactModal } from 'web3-react-modal';\nimport connectors from '../../utils/connectors';\nimport { weiToNumber } from '../../utils/helpers';\nimport {Link, Route, useLocation, matchPath, useHistory} from 'react-router-dom';\nimport { Parallax, ParallaxLayer, IParallax } from '@react-spring/parallax';\nimport _ from 'lodash';\nimport { LzButton } from '../LzButtons';\nimport { AccountInfoButton } from '../AccountInfoButton';\nimport { LzText } from '../LzText';\nimport { CopyableAddress } from '../CopyableAddress';\nimport LzAbi from '../../assets/abis/erc20.json';\nimport { ethers } from 'ethers';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { BrowserView, MobileView } from '../DeviceDetect';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLanguage } from \"../../hooks/use-language\";\nimport GitInfo from 'react-git-info/macro';\nimport {CopyToClipboard} from \"react-copy-to-clipboard\";\n\nconst CrossStorageClient = require('cross-storage').CrossStorageClient\n\nconst LS_CONNECTOR = 'web3connector';\nconst LS_THEME = 'theme';\nconst DEFAULT_APP_PATH = '/';\n\ntype DappType = {\n  configs: {\n    icon: (props: React.HTMLAttributes<HTMLImageElement>) => JSX.Element;\n    name: string;\n    path: string;\n    menuLink?: string;\n    children?: {\n      name: string;\n      path: string;\n      menuLink?: string;\n    }[];\n  };\n  Component: any;\n};\n\ntype SubMenuItem = { name: string; path: string };\ntype MenuItem = SubMenuItem & { children: MenuItem[]; icon: React.Component };\n\nexport const AppLayout = (props: { dapps: DappType[] }) => {\n  const { activate, account, deactivate, chainId, library } = useWeb3React();\n  const [bnbBalance, setBnbBalance] = useState<any>();\n  const [lzBalance, setLzBalance] = useState<any>();\n  const [visibleWalletModal, setVisibleWalletModal] = useState<any>();\n  const [theme, setTheme] = useState<'dark' | 'light'>('light');\n  const dapps = props.dapps;\n  const location = useLocation();\n  const history = useHistory();\n  const [showMobileFooterExpand, setShowMobileFooterExpand] = useState<boolean>(false);\n  const [showMobileMenu, setShowMobileMenu] = useState<boolean>(false);\n  const [showDesktopWalletExpand, setShowDesktopWalletExpand] = useState<boolean>(false);\n  const [showSelectLanguage, setShowSelectLanguage] = useState<boolean>(false)\n  const { language, setLanguage, getText, supportedLanguages } = useLanguage()\n  const refAccountBtn = useRef(null);\n  const refMobileAccountBtn = useRef(null);\n  const [xStorageClient, setXStorageClient] = useState<typeof CrossStorageClient>(undefined)\n\n  useEffect(() => {\n    // dapps.map((d: any) =>d.configs).find((config: any) => config.path === location.pathname)\n\n    for(let i in dapps) {\n      // if child menu is match with path\n      const children = dapps[i].configs.children;\n      for (let j in children) {\n        if (matchPath(location.pathname, { path: children[j].path, exact: children[j].path === '/' })) {\n          document.title = 'LaunchZone | ' + children[j].name\n          return\n        }\n      }\n\n      if (matchPath(location.pathname, {path: dapps[i].configs.path})) {\n        document.title = 'LaunchZone | ' + (dapps[i].configs.name === 'Home' ? 'The Ultimate DeFi Platform' : dapps[i].configs.name)\n      }\n    }\n\n  }, [location.pathname]);\n\n  useHotkeys('esc', (e) => {\n    e.preventDefault();\n    setShowMobileFooterExpand(false);\n    setShowDesktopWalletExpand(false);\n  });\n\n  useEffect(() => {\n    if (!process.env.REACT_APP_X_STORAGE_URL) {\n      return\n    }\n    const storage = new CrossStorageClient(process.env.REACT_APP_X_STORAGE_URL)\n    storage\n      .onConnect()\n      .then(() => {\n        setXStorageClient(storage)\n      })\n      .then(() => {\n        console.log('x-storage', 'connected', process.env.REACT_APP_X_STORAGE_URL)\n        const refAddress = (new URLSearchParams(location.search)).get('r')\n        if (refAddress) {\n          const formalizedAddress = ethers.utils.getAddress(refAddress)\n          return storage.set('LZ_REFERRAL', formalizedAddress)\n            .then(() => console.log('x-storage', 'LZ_REFERRAL', formalizedAddress))\n        }\n      })\n      .catch(console.error)\n  }, [process.env.REACT_APP_X_STORAGE_URL])\n\n  useEffect(() => {\n    const initTheme = localStorage.getItem(LS_THEME) as 'dark' | 'light';\n    setTheme(initTheme ? initTheme : 'light');\n\n    const gitInfo = GitInfo();\n    console.log('Environment:', process.env.REACT_APP_NODE_ENV)\n    console.log('Hash:', gitInfo.commit.hash)\n  }, []);\n\n  useEffect(() => {\n    const initConnector = localStorage.getItem(LS_CONNECTOR);\n    if (initConnector) {\n      const connector = Object.values(connectors)\n        .map(({ connector }) => connector)\n        .find((connector) => connector?.constructor?.name === initConnector);\n      if (connector) {\n        activate(connector);\n      }\n    }\n  }, [activate]);\n\n  useEffect(() => {\n    if (!!account && !!library) {\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          setBnbBalance(weiToNumber(balance));\n        })\n        .catch(() => {\n          setBnbBalance(null);\n        });\n      setBnbBalance(undefined);\n    }\n  }, [account, library, chainId]);\n\n  useEffect(() => {\n    if (!!account && !!library) {\n      trackConnectedAccount(account)\n      const contract = new ethers.Contract(\n        '0x3b78458981eb7260d1f781cb8be2caac7027dbe2',\n        LzAbi,\n        library,\n      );\n      contract\n        .balanceOf(account)\n        .then((lzBalance: any) => {\n          setLzBalance(weiToNumber(lzBalance));\n        })\n        .catch(() => {\n          setLzBalance(null);\n        });\n      setLzBalance(undefined);\n    }\n  }, [account, library, chainId]);\n\n  const parallax = useRef<IParallax>(null);\n\n  const trackConnectedAccount = (acc: string) => {\n    fetch(process.env.REACT_APP_TRACK_ACC_API + '/api/detail/' + acc).catch((e) => console.error(e))\n  }\n\n  const findSelectedMenuItem = () => {\n    if(location.pathname === '/') {\n      return {\n        Component: React.lazy(() => {\n          // @ts-ignore\n          import('swap-interface/dist/component.css');\n          return import('swap-interface/dist/component');\n        }),\n        configs: require('swap-interface/dist/configs'),\n      }\n    }\n\n    for(let i in dapps) {\n      const children = dapps[i].configs.children;\n\n      for(let j in children) {\n        if(matchPath(location.pathname, { path: children[j].path, exact: children[j].path === '/' })) {\n          return {\n            Component: dapps[i].Component[j],\n            configs: children[j]\n          }\n        }\n      }\n\n      if(matchPath(location.pathname, { path: dapps[i].configs.path, exact: dapps[i].configs.path === '/' })) {\n        return dapps[i];\n      }\n    }\n\n    return dapps[0];\n  }\n\n  const isMenuExpand = ({configs}: any) => {\n    if(matchPath(location.pathname, { path: configs.path, exact: configs.path === '/' })) {\n      return true;\n    } else if(configs.children) {\n      for (let child of configs.children) {\n        if(matchPath(location.pathname, { path: child.path, exact: child.path === '/' })) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  const selectedMenuItem = findSelectedMenuItem();\n  const Component = selectedMenuItem?.Component;\n\n  return (\n    <>\n      <div className={`${theme ? theme : 'light'}`}>\n        <div className='body'>\n          <BrowserView>\n            <PerfectScrollbar className='sidebar'>\n              <div className='sidebar__top'>\n                <Link to={DEFAULT_APP_PATH} className='sidebar__lz-logo-container'>\n                  <LzLogoIcon />\n                </Link>\n                <div className='sidebar__menu-item-list'>\n                  {dapps?.map(({ configs: menuItem }) => {\n                    const Icon = menuItem.icon;\n                    const children = menuItem.children\n                    return (\n                      <div className='sidebar__menu-item'>\n\n                        <Link to={menuItem.menuLink || menuItem.path}>\n                          <div className={`sidebar__menu-item__label ${isMenuExpand({configs: menuItem}) && 'active'}`}\n                          >\n                            {!!menuItem.icon ? <Icon className='sidebar__menu-item__icon' /> : null}\n                            <div className='sidebar__menu-item__title'>\n                              <span className='sidebar__menu-item__title-text'>\n                                {menuItem.name}\n                              </span>\n                            </div>\n                            <div className={`sidebar__menu-item__title-selected ${isMenuExpand({configs: menuItem}) || matchPath(location.pathname, {\n                              path: menuItem.path,\n                              exact: menuItem.path === '/',\n                            }) ? 'active' : ''}`}\n                            />\n                          </div>\n                        </Link>\n                        <div className={`sidebar__menu-item__submenu ${isMenuExpand({configs: menuItem}) ? 'expand': ''}`}>\n                          {children?.map((subMenuItem) => {\n                            if (\n                              matchPath(location.pathname, {\n                                path: subMenuItem.path,\n                                exact: subMenuItem.path === '/',\n                              })\n                            ) {\n                              return (\n                                <Link to={menuItem.menuLink || menuItem.path}>\n                                  <LzText className='sidebar__sub-menu-item'>\n                                    {subMenuItem.name}\n                                  </LzText>\n                                </Link>\n                              );\n                            }\n                            return (\n                              <Link to={subMenuItem.menuLink || subMenuItem.path}>\n                                <div className='sidebar__sub-menu-item'>\n                                  {subMenuItem.name}\n                                </div>\n                              </Link>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    );\n                  })}\n                  <div className='sidebar__menu-item'>\n                    <a href=\"/pad\">\n                      <div className='sidebar__menu-item__label'>\n                        <PadIcon className='sidebar__menu-item__icon' />\n                        <div className='sidebar__menu-item__title'>\n                          <span className='sidebar__menu-item__title-text'>\n                            Pad\n                          </span>\n                        </div>\n                        <div className='sidebar__menu-item__title-selected'\n                        />\n                      </div>\n                    </a>\n                  </div>\n                  <div className='sidebar__menu-item'>\n                    <a href=\"https://docs.lz.finance/\" target='_blank'>\n                      <div className='sidebar__menu-item__label'>\n                        <DocsIcon className='sidebar__menu-item__icon' />\n                        <div className='sidebar__menu-item__title'>\n                          <span className='sidebar__menu-item__title-text'>\n                            Docs\n                          </span>\n                        </div>\n                        <div className='sidebar__menu-item__title-selected'\n                        />\n                      </div>\n                    </a>\n                  </div>\n                  <div className='sidebar__menu-item'>\n                    <a href=\"https://help.lz.finance/\" target='_blank'>\n                      <div className='sidebar__menu-item__label'>\n                        <HelpIcon className='sidebar__menu-item__icon' />\n                        <div className='sidebar__menu-item__title'>\n                          <span className='sidebar__menu-item__title-text'>\n                            Help\n                          </span>\n                        </div>\n                        <div className='sidebar__menu-item__title-selected'\n                        />\n                      </div>\n                    </a>\n                  </div>\n                </div>\n                <div\n                  ref={refAccountBtn}\n                  className='sidebar__account-info-button-container'\n                  onClick={() => {\n                    account &&\n                      setShowDesktopWalletExpand(\n                        (showDesktopWalletExpand) => !showDesktopWalletExpand,\n                      );\n                    !account && setVisibleWalletModal(true);\n                  }}\n                >\n                  {!account ? (\n                    <LzButton theme='dark' className='sidebar__connect-wallet-button'>\n                      {getText('connect_wallet')}\n                    </LzButton>\n                  ) : null}\n                  {account ? <AccountInfoButton account={account} balance={bnbBalance} /> : null}\n                </div>\n              </div>\n              <div className='sidebar__bottom'>\n                <div className='sidebar__bottom__container'>\n                  <div className='sidebar__bottom__configs'>\n                    <ThemeIcon\n                      className='sidebar__bottom__theme-icon'\n                      onClick={() => {\n                        const themeToSet = theme === 'dark' ? 'light' : 'dark';\n                        localStorage.setItem(LS_THEME, themeToSet);\n                        setTheme(themeToSet);\n                      }}\n                      type={theme}\n                    />\n                    <OutsideClickHandler\n                      onOutsideClick={() => {\n                        setShowSelectLanguage(false);\n                      }}\n                    >\n                      <div className='sidebar__bottom__language' onClick={() => { setShowSelectLanguage(!showSelectLanguage) }}>\n                        <LanguageIcon className='sidebar__bottom__language-icon' />\n                        <span className='sidebar__bottom__language-text'>{language}</span>\n                      </div>\n                    </OutsideClickHandler>\n                  </div>\n                  <div className='sidebar__bottom__social-media-icons'>\n                    <a href=\"https://t.me/lzofficial\" target='_blank'>\n                      <TelegramIcon />\n                    </a>\n                    <a href=\"https://t.me/launchzoneann\" target='_blank'>\n                      <GlobalCommunityLogoIcon />\n                    </a>\n                    <a href=\"https://twitter.com/launchzoneann\" target='_blank'>\n                      <TwitterIcon />\n                    </a>\n                    <a href=\"https://www.facebook.com/launchzoneann\" target='_blank'>\n                      <FacebookLogoIcon />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </PerfectScrollbar>\n            <div className={`sidebar__bottom__language--select ${showSelectLanguage ? 'active' : ''}`}>\n              <span className='btn-close-language'>\n                <LeftArrowGreyIcon />\n              </span>\n              {\n                Object.entries(supportedLanguages).map((lang, key) => {\n                  return (\n                    <div\n                      onClick={() => {\n                        setLanguage(lang[0])\n                      }\n                      }\n                      key={key}\n                      className={`sidebar__bottom__language--select-option ${language === lang[0] ? 'selected' : ''}`}\n                    >\n                      <CountryFlagIcon country={lang[0]} />\n                      <span className='ml-1'>{lang[1]}</span>\n                    </div>\n                  )\n                })\n              }\n            </div>\n\n            <div className='desktop-content'>\n              {Component && (\n                <Suspense fallback={null}>\n                  <Component\n                    language={language}\n                    theme={theme}\n                    useWeb3React={useWeb3React}\n                    xStorageClient={xStorageClient}\n                    useSubPage={() => location.pathname}\n                    env={process.env.REACT_APP_NODE_ENV || 'production'}\n                    showConnectWalletModal={() => setVisibleWalletModal(true)}\n                  />\n                </Suspense>\n              )}\n            </div>\n            <OutsideClickHandler\n              disabled={!showDesktopWalletExpand}\n              onOutsideClick={(e: any) => {\n                if (!e.path.includes(refAccountBtn.current)) {\n                  setShowDesktopWalletExpand(false)\n                }\n              }}\n            >\n              <div className={`sidebar__expand ${showDesktopWalletExpand ? 'show' : ''}`}>\n                <LeftArrowIcon\n                  className='sidebar__expand__left-arrow-icon'\n                  onClick={() => {\n                    setShowDesktopWalletExpand(\n                      (showDesktopWalletExpand) => !showDesktopWalletExpand,\n                    );\n                  }}\n                />\n\n                <div className='sidebar__expand--head'>\n                  <LzText>{getText('your_address')}</LzText>\n                  <LzText className='sidebar__expand__referral'>\n                    <span>{getText('referral_link')}</span>\n                    <CopyToClipboard text={`${window.location.origin.toString()}${location.pathname}?r=${account}`}>\n                      <CopyIcon containerProps={{ className: 'copyable-address-copy-icon' }} />\n                    </CopyToClipboard>\n                  </LzText>\n                </div>\n                <CopyableAddress>{account!}</CopyableAddress>\n                <div className='sidebar__expand__bnb-balance'>\n                  <div>{getText('bnb_balance')}</div>\n                  <div>{bnbBalance}</div>\n                </div>\n                <div className='sidebar__expand__lz-balance'>\n                  <div>{getText('lz_balance')}</div>\n                  <div>{lzBalance}</div>\n                </div>\n\n                <LzText className='sidebar__expand__view-on-bsc-scan'>\n                  <a target='_blank' href={`https://bscscan.com/address/${account}`}>\n                    {getText('view_on_bscscan')}\n                  </a>\n                </LzText>\n                <LzButton\n                  onClick={() => {\n                    deactivate();\n                    localStorage.removeItem(LS_CONNECTOR);\n                    setShowDesktopWalletExpand(false);\n                  }}\n                >\n                  {getText('disconnect_wallet')}\n                </LzButton>\n              </div>\n            </OutsideClickHandler>\n          </BrowserView>\n          <MobileView>\n            <div className='navbar'>\n              <div className='navbar__top-line'>\n                <div className='navbar__lz-logo-icon-container'>\n                  <LzLogoIcon />\n                </div>\n                <LzText className='navbar__title'>{selectedMenuItem?.configs.name}</LzText>\n                {showMobileMenu ? (\n                  <div className='navbar__menu-icon'>\n                    <ArrowUpIcon\n                      onClick={() => {\n                        setShowMobileMenu(false);\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div className='navbar__menu-icon'>\n                    <MenuIcon\n                      onClick={() => {\n                        setShowMobileMenu(true);\n                      }}\n                    />\n                  </div>\n                )}\n              </div>\n              <div className={`navbar__menu-item-list ${showMobileMenu && 'active'} `}>\n                {dapps?.map(({ configs: menuItem }) => {\n                  const Icon = menuItem.icon;\n\n                  if(menuItem.children && menuItem.children.length > 0) {\n                    return menuItem.children.map((child: any) => (\n                      <Link to={child.menuLink || child.path} className='navbar__menu-item'>\n                        {!!child.icon ? <Icon className='navbar__menu-item__icon' /> : null}\n                        <div className='navbar__menu-item__title'>\n                          <span className='navbar__menu-item__title-text'>{child.name}</span>\n                          {matchPath(location.pathname, {\n                            path: child.path,\n                            exact: child.path === '/',\n                          }) ? (\n                            <div className='navbar__menu-item__title-selected' />\n                          ) : null}\n                        </div>\n                      </Link>\n                    ))\n                  }\n\n                  return (\n                    <Link to={menuItem.menuLink || menuItem.path} className='navbar__menu-item'>\n                      {!!menuItem.icon ? <Icon className='navbar__menu-item__icon' /> : null}\n                      <div className='navbar__menu-item__title'>\n                        <span className='navbar__menu-item__title-text'>{menuItem.name}</span>\n                        {matchPath(location.pathname, {\n                          path: menuItem.path,\n                          exact: menuItem.path === '/',\n                        }) ? (\n                          <div className='navbar__menu-item__title-selected' />\n                        ) : null}\n                      </div>\n                    </Link>\n                  );\n                })}\n                <a className='navbar__menu-item' href=\"/pad\">\n                  <PadIcon className='navbar__menu-item__icon' />\n                  <div className='navbar__menu-item__title'>\n                    <span className='navbar__menu-item__title-text'>\n                      Pad\n                    </span>\n                  </div>\n                </a>\n                <a className='navbar__menu-item' href=\"https://docs.lz.finance/\" target='_blank'>\n                  <DocsIcon className='navbar__menu-item__icon' />\n                  <div className='navbar__menu-item__title'>\n                    <span className='navbar__menu-item__title-text'>\n                      Docs\n                    </span>\n                  </div>\n                </a>\n                <a className='navbar__menu-item' href=\"https://help.lz.finance/\" target='_blank'>\n                  <HelpIcon className='navbar__menu-item__icon' />\n                  <div className='navbar__menu-item__title'>\n                    <span className='navbar__menu-item__title-text'>\n                      Help\n                    </span>\n                  </div>\n                </a>\n              </div>\n            </div>\n            {selectedMenuItem?.configs.children?.length && showMobileMenu ? (\n              <div className='navbar__sub-menu-item-list'>\n                <Parallax\n                  className='navbar__sub-menu-item-list__parallax'\n                  ref={parallax}\n                  pages={Math.ceil(selectedMenuItem?.configs.children?.length / 4)}\n                  horizontal\n                >\n                  {_(selectedMenuItem?.configs.children)\n                    .chunk(4)\n                    .map((subMenuItemList, i) => {\n                      const pageType = (() => {\n                        if ((selectedMenuItem?.configs?.children?.length ?? 0) <= 4) {\n                          return 'SINGLE';\n                        }\n                        if (i === 0) {\n                          return 'FIRST';\n                        }\n                        if ((i + i) * 4 >= (selectedMenuItem?.configs?.children?.length ?? 0)) {\n                          return 'LAST';\n                        }\n                        return 'MIDDLE';\n                      })();\n                      const gridTemplateColumns = {\n                        SINGLE: '1fr 1fr 1fr 1fr',\n                        FIRST: '1fr 1fr 1fr 1fr 0.4fr',\n                        MIDDLE: '0.4fr 1fr 1fr 1fr 1fr 0.4fr',\n                        LAST: '0.4fr 1fr 1fr 1fr 1fr',\n                      }[pageType];\n                      return (\n                        <ParallaxLayer\n                          className='navbar__sub-menu-item-list__parallax-layer'\n                          offset={i}\n                        >\n                          <div\n                            className='navbar__sub-menu-item-list__grid'\n                            style={{\n                              gridTemplateColumns,\n                            }}\n                          >\n                            {['MIDDLE', 'LAST'].includes(pageType) ? (\n                              <div\n                                className='navbar__sub-menu-item-list__prev-icon'\n                                onClick={() => {\n                                  if (parallax.current) {\n                                    parallax.current.scrollTo(i - 1);\n                                  }\n                                }}\n                              >\n                                <DoubleLeftArrowIcon />\n                              </div>\n                            ) : null}\n                            {subMenuItemList.map((subMenuItem) => {\n                              return (\n                                <Link\n                                  className='navbar__sub-menu-item-list__item-title'\n                                  to={subMenuItem.menuLink || subMenuItem.path}\n                                >\n                                  {subMenuItem.name}\n                                </Link>\n                              );\n                            })}\n                            {['MIDDLE', 'FIRST'].includes(pageType) ? (\n                              <div\n                                className='navbar__sub-menu-item-list__next-icon'\n                                onClick={() => {\n                                  if (parallax.current) {\n                                    parallax.current.scrollTo(i + 1);\n                                  }\n                                }}\n                              >\n                                <DoubleRightArrowIcon />\n                              </div>\n                            ) : null}\n                          </div>\n                        </ParallaxLayer>\n                      );\n                    })\n                    .value()}\n                </Parallax>\n              </div>\n            ) : null}\n            <div className='mobile-content'>\n              {Component && (\n                <Suspense fallback={null}>\n                  <Component\n                    theme={theme}\n                    language={language}\n                    useWeb3React={useWeb3React}\n                    useSubPage={() => location.pathname}\n                    xStorageClient={xStorageClient}\n                    env={process.env.REACT_APP_NODE_ENV || 'production'}\n                    showConnectWalletModal={() => setVisibleWalletModal(true)}\n                  />\n                </Suspense>\n              )}\n            </div>\n            <OutsideClickHandler\n              disabled={!showMobileFooterExpand}\n              onOutsideClick={(e: any) => {\n                if (!e.path.includes(refMobileAccountBtn.current)) {\n                  setShowMobileFooterExpand(false);\n                }\n              }}\n            >\n              <div className={`footer__expand ${showMobileFooterExpand ? 'show' : ''}`}>\n                <div className='footer__expand--head'>\n                  <LzText>{getText('your_address')}</LzText>\n                  <LzText className='footer__expand__referral'>\n                    <span>{getText('referral_link')}</span>\n                    <CopyToClipboard text={`${window.location.origin.toString()}${location.pathname}?r=${account}`}>\n                      <CopyIcon containerProps={{ className: 'copyable-address-copy-icon' }} />\n                    </CopyToClipboard>\n                  </LzText>\n                </div>\n                <CopyableAddress>{account!}</CopyableAddress>\n                <div className='footer__expand__bnb-balance'>\n                  <div>{getText('bnb_balance')}</div>\n                  <div>{bnbBalance}</div>\n                </div>\n                <div className='footer__expand__lz-balance'>\n                  <div>{getText('lz_balance')}</div>\n                  <div>{lzBalance}</div>\n                </div>\n                <div className='footer__expand__view-on-bsc-scan'>\n                  <LzText className='footer__expand__view-on-bsc-scan-link'>\n                    <a target='_blank' href={`https://bscscan.com/address/${account}`}>\n                      {getText('view_on_bscscan')}\n                    </a>\n                  </LzText>\n                  <div className='footer__expand__social-medias'>\n                    <a href=\"https://t.me/lzofficial\" target='_blank'>\n                      <TelegramIcon />\n                    </a>\n                    <a href=\"https://t.me/launchzoneann\" target='_blank'>\n                      <GlobalCommunityLogoIcon />\n                    </a>\n                    <a href=\"https://twitter.com/launchzoneann\" target='_blank'>\n                      <TwitterIcon />\n                    </a>\n                    <a href=\"https://www.facebook.com/launchzoneann\" target='_blank'>\n                      <FacebookLogoIcon />\n                    </a>\n                  </div>\n                </div>\n                <LzButton\n                  onClick={() => {\n                    deactivate();\n                    localStorage.removeItem(LS_CONNECTOR);\n                    setShowMobileFooterExpand(false);\n                  }}\n                >\n                  {getText('disconnect_wallet')}\n                </LzButton>\n              </div>\n            </OutsideClickHandler>\n            <div className='footer'>\n              {!account ? (\n                <LzButton\n                  theme='dark'\n                  className='footer__connect-wallet-button'\n                  onClick={() => {\n                    setVisibleWalletModal(true);\n                  }}\n                >\n                  {getText('connect_wallet')}\n                </LzButton>\n              ) : null}\n              {account ? (\n                <div\n                  ref={refMobileAccountBtn}\n                >\n                  <AccountInfoButton\n                    onClick={() => {\n                      console.log(showMobileFooterExpand)\n                      setShowMobileFooterExpand(!showMobileFooterExpand);\n                    }}\n                    account={account}\n                    balance={bnbBalance}\n                  />\n                </div>\n              ) : null}\n              <ThemeIcon\n                type={theme}\n                onClick={() => {\n                  const themeToSet = theme === 'dark' ? 'light' : 'dark';\n                  localStorage.setItem(LS_THEME, themeToSet);\n                  setTheme(themeToSet);\n                }}\n              />\n              <OutsideClickHandler\n                onOutsideClick={() => {\n                  setShowSelectLanguage(false);\n                }}\n              >\n                <div className='footer__language' onClick={() => setShowSelectLanguage(!showSelectLanguage)}>\n                  <LanguageIcon className='footer__language-icon' />\n                  <span className='footer__language-text'>{language.toUpperCase()}</span>\n                  <div className={`footer__language--select ${showSelectLanguage ? 'active' : ''}`}>\n                    <span className='btn-close-language'>\n                      <DownArrowGreyIcon />\n                    </span>\n                    {\n                      Object.entries(supportedLanguages).map((lang, key) => {\n                        return (\n                          <div\n                            onClick={() => {\n                              setLanguage(lang[0])\n                            }\n                            }\n                            key={key}\n                            className={`footer__language--select-option ${language === lang[0] ? 'selected' : ''}`}\n                          >\n                            {lang[1]}\n                          </div>\n                        )\n                      })\n                    }\n                  </div>\n                </div>\n              </OutsideClickHandler>\n              {showMobileFooterExpand ? (\n                <XIcon\n                  onClick={() => {\n                    setShowMobileFooterExpand((showMobileFooter) => !showMobileFooter);\n                  }}\n                />\n              ) : (\n                <MenuIcon\n                  onClick={() => {\n                    account && setShowMobileFooterExpand((showMobileFooter) => !showMobileFooter);\n                    !account && setVisibleWalletModal(true);\n                  }}\n                />\n              )}\n            </div>\n          </MobileView>\n          <Web3ReactModal\n            visible={visibleWalletModal}\n            setVisible={setVisibleWalletModal}\n            providerOptions={connectors}\n            onConnect={(connector: any,_:any,email:string) => {\n              const name = connector?.constructor?.name;\n              if (email && name === 'MagicConnector'){\n                connector.email = email\n              }\n              activate(connector, (err) => {\n                alert(err.toString())\n              });\n              if (name) {\n                localStorage.setItem(LS_CONNECTOR, name);\n              }\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Web3ReactProvider} from '@web3-react/core';\nimport {ethers} from 'ethers';\nimport {AppLayout} from './components/AppLayout';\nimport {HashRouter as Router} from 'react-router-dom';\nimport './styles/main.scss';\nimport './index.css';\n\nfunction getLibrary(provider: any) {\n  const library = new ethers.providers.Web3Provider(provider);\n  return library;\n}\n\nconst earnConfig = {\n  icon: (props: any) => (\n    <img src='/icons/earn.svg' {...props} />\n  ),\n  name: 'Earn',\n  children: [\n    require('sfarm-interface/dist/configs'),\n    require('pool-interface/dist/configs')\n  ],\n  path: '/bank'\n}\n\nconst exchangeConfig = {\n  icon: (props: any) => (\n    <img src='/icons/exchange.svg' {...props} />\n  ),\n  name: 'Exchange',\n  children: [\n    require('swap-interface/dist/configs')\n  ],\n  path: '/swap'\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Router>\n        <AppLayout\n          dapps={[\n            {\n              Component: React.lazy(() => {\n                // @ts-ignore\n                import('home-interface/dist/component.css');\n                return import('home-interface/dist/component');\n              }),\n              configs: require('home-interface/dist/configs'),\n            },\n            {\n              Component: [\n                React.lazy(() => {\n                  // @ts-ignore\n                  import('swap-interface/dist/component.css');\n                  return import('swap-interface/dist/component');\n                })\n              ],\n              configs: exchangeConfig,\n            },\n            {\n              configs: earnConfig,\n              Component: [\n                React.lazy(() => {\n                  // @ts-ignore\n                  import('sfarm-interface/dist/component.css');\n                  return import('sfarm-interface/dist/component');\n                }),\n                React.lazy(() => {\n                  // @ts-ignore\n                  import('pool-interface/dist/index.css');\n                  return import('pool-interface/dist');\n                })\n              ]\n            },\n          ]}\n        />\n      </Router>\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}